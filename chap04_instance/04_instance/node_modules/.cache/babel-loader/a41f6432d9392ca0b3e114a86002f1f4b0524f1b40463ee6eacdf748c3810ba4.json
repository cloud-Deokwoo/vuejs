{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Watch Example\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.question = $event),\n    placeholder: \"Ask a question\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.question]]), _createElementVNode(\"p\", null, _toDisplayString($data.answer), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_cache","$event","$data","question","placeholder","_toDisplayString","answer"],"sources":["D:\\gitRepository\\sunglee0517\\vuejs\\chap04_instance\\04_instance\\src\\components\\Watch.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Watch Example</h2>\r\n      <input v-model=\"question\" placeholder=\"Ask a question\">\r\n      <p>{{ answer }}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        question: '',\r\n        answer: 'I cannot give you an answer until you ask a question!'\r\n      };\r\n    },\r\n    watch: {\r\n      question(newQuestion) {\r\n        this.answer = 'Thinking...';\r\n        this.getAnswer();\r\n      }\r\n    },\r\n    methods: {\r\n      getAnswer() {\r\n        // Mock API call\r\n        setTimeout(() => {\r\n          this.answer = '42';\r\n        }, 1000);\r\n      }\r\n    }\r\n  };\r\n  </script>"],"mappings":";gCAEMA,mBAAA,CAAsB,YAAlB,eAAa;;uBADnBC,mBAAA,CAIM,cAHJC,UAAsB,E,gBACtBF,mBAAA,CAAuD;IAH7D,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGsBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAtBF,KAAA,CAAAC,QAAQ,E,GACxBN,mBAAA,CAAmB,WAAAQ,gBAAA,CAAbH,KAAA,CAAAI,MAAM,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}